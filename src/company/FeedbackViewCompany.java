/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package company;

import db.Dbcon;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jj
 */
public class FeedbackViewCompany extends javax.swing.JPanel {
int id;
DefaultTableModel model=null;
String date;
String title;
String discription;
    /**
     * Creates new form FeedbackView
     */
    public FeedbackViewCompany() {
        initComponents();
    }
    public FeedbackViewCompany(int id1) {
        initComponents();
        id=id1;
        loadFeedbackTable();
    }
private void loadFeedbackTable(){
        try {
            deleteButton.setEnabled(false);
            String sql = "select * from tbl_feedback where audence='"+id+"' and usernotification=0";
            Dbcon db = new Dbcon();
            model=(DefaultTableModel) feedbackListTable.getModel();
            ResultSet rs = db.select(sql);
            String arr[]=new String[2];
            while(rs.next()){
                arr[0]=rs.getString("feedbackdate");
                arr[1]=rs.getString("title");
                //arr[2]=rs.getString("discription");
                model.addRow(arr);
            }
        } catch (SQLException ex) {
            Logger.getLogger(FeedbackViewCompany.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        feedbackListTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        discriptionTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("   FEEDBACK");

        feedbackListTable.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N
        feedbackListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Subject"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        feedbackListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feedbackListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(feedbackListTable);

        discriptionTextArea.setEditable(false);
        discriptionTextArea.setColumns(20);
        discriptionTextArea.setRows(5);
        jScrollPane2.setViewportView(discriptionTextArea);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 3, 18)); // NOI18N
        jLabel2.setText("         DISCRIPTION");

        deleteButton.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 3, 18)); // NOI18N
        jLabel3.setText("       FEEDBACK  LIST");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(340, 340, 340))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(deleteButton)
                        .addGap(87, 87, 87))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addComponent(deleteButton)
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void feedbackListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackListTableMouseClicked
       
         model = (DefaultTableModel) feedbackListTable.getModel();
        if (model.getValueAt(feedbackListTable.getSelectedRow(), 0).toString().equals("")) {
            JOptionPane.showMessageDialog(this, "No data to select");
        } else {
            try {
                date = model.getValueAt(feedbackListTable.getSelectedRow(), 0).toString();
                title= model.getValueAt(feedbackListTable.getSelectedRow(), 1).toString();
                deleteButton.setEnabled(true);
                String sql = "SELECT * FROM tbl_feedback WHERE audence='"+id+"'AND usernotification=0 AND feedbackdate='"+date+"' AND title='"+title+"'";
                Dbcon db = new Dbcon();
                ResultSet rs = db.select(sql);
                if(rs.next()){
                   discription= rs.getString("discription");
                           discriptionTextArea.setText(discription);
                    
                }
            }
            // TODO add your handling code here:
            catch (SQLException ex) {
                Logger.getLogger(FeedbackViewCompany.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_feedbackListTableMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        String sql = "delete from tbl_feedback where title='"+title+"' and feedbackdate='"+date+"' and discription='"+discription+"'";
        Dbcon db = new Dbcon();
        int n = db.insert(sql);
        FeedbackViewCompany feedbackViewCompany = new FeedbackViewCompany(id);
        this.getParent().add(feedbackViewCompany);
        this.setVisible(false);
        feedbackViewCompany.setVisible(true);
        this.revalidate();
        this.repaint();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextArea discriptionTextArea;
    private javax.swing.JTable feedbackListTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
